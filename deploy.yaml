apiVersion: v1
kind: Namespace
metadata:
  name: kube-ipmi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-ipmi-sa
  namespace: kube-ipmi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-ipmi-role
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-ipmi-rolebinding
subjects:
  - kind: ServiceAccount
    name: kube-ipmi-sa
    namespace: kube-ipmi
roleRef:
  kind: ClusterRole
  name: kube-ipmi-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-ipmi
  namespace: kube-ipmi
spec:
  selector:
    matchLabels:
      app: kube-ipmi
  template:
    metadata:
      labels:
        app: kube-ipmi
    spec:
      serviceAccountName: kube-ipmi-sa
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/os
                    operator: In
                    values:
                      - linux
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
      volumes:
        - name: dev-ipmi
          hostPath:
            path: /dev/ipmi0
      initContainers:
        - name: ipmi-annotator
          image: supporttools/kube-ipmi:latest
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
          volumeMounts:
            - name: dev-ipmi
              mountPath: /dev/ipmi0
      containers:
        - name: sleep
          image: registry.k8s.io/pause:3.1
      tolerations:
        - operator: Exists          
